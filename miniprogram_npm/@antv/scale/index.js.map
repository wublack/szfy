{"version":3,"sources":["scale.js"],"names":[],"mappingsfile":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\r\n\tif(typeof exports === 'object' && typeof module === 'object')\r\n\t\tmodule.exports = factory();\r\n\telse if(typeof define === 'function' && define.amd)\r\n\t\tdefine([], factory);\r\n\telse if(typeof exports === 'object')\r\n\t\texports[\"scale\"] = factory();\r\n\telse\r\n\t\troot[\"scale\"] = factory();\r\n})(typeof self !== 'undefined' ? self : this, function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId]) {\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/ \t\t}\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\ti: moduleId,\r\n/******/ \t\t\tl: false,\r\n/******/ \t\t\texports: {}\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.l = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// define getter function for harmony exports\r\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\r\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\r\n/******/ \t\t\tObject.defineProperty(exports, name, {\r\n/******/ \t\t\t\tconfigurable: false,\r\n/******/ \t\t\t\tenumerable: true,\r\n/******/ \t\t\t\tget: getter\r\n/******/ \t\t\t});\r\n/******/ \t\t}\r\n/******/ \t};\r\n/******/\r\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\r\n/******/ \t__webpack_require__.n = function(module) {\r\n/******/ \t\tvar getter = module && module.__esModule ?\r\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\r\n/******/ \t\t\tfunction getModuleExports() { return module; };\r\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\r\n/******/ \t\treturn getter;\r\n/******/ \t};\r\n/******/\r\n/******/ \t// Object.prototype.hasOwnProperty.call\r\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(__webpack_require__.s = 13);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar mix = __webpack_require__(16);\r\n\r\nvar each = __webpack_require__(1);\r\n\r\nvar isObject = __webpack_require__(7);\r\n\r\nvar isNil = __webpack_require__(2);\r\n\r\nvar Scale =\r\n/*#__PURE__*/\r\nfunction () {\r\n  var _proto = Scale.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    this.type = 'base';\r\n    /**\r\n     * 格式化函数,输出文本或者tick时的格式化函数\r\n     * @type {Function}\r\n     */\r\n\r\n    this.formatter = null;\r\n    /**\r\n     * 输出的值域\r\n     * @type {Array}\r\n     */\r\n\r\n    this.range = [0, 1];\r\n    /**\r\n     * 度量的标记\r\n     * @type {Array}\r\n     */\r\n\r\n    this.ticks = null;\r\n    /**\r\n     * 参与度量计算的值，可选项\r\n     * @type {Array}\r\n     */\r\n\r\n    this.values = [];\r\n  };\r\n\r\n  function Scale(cfg) {\r\n    this._initDefaultCfg();\r\n\r\n    mix(this, cfg);\r\n    this.init();\r\n  }\r\n  /**\r\n   * 度量初始化\r\n   * @protected\r\n   */\r\n\r\n\r\n  _proto.init = function init() {}\r\n  /**\r\n   * 获取该度量的ticks,返回的是多个对象，\r\n   *   - text: tick 的文本\r\n   *   - value: 对应的度量转换后的值\r\n   * <code>\r\n   *   [\r\n   *     {text: 0,value:0}\r\n   *     {text: 1,value:0.2}\r\n   *     {text: 2,value:0.4}\r\n   *     {text: 3,value:0.6}\r\n   *     {text: 4,value:0.8}\r\n   *     {text: 5,value:1}\r\n   *   ]\r\n   * </code>\r\n   * @param {Number} count 输出tick的个数的近似值，默认是 10\r\n   * @return {Array} 返回 ticks 数组\r\n   */\r\n  ;\r\n\r\n  _proto.getTicks = function getTicks() {\r\n    var self = this;\r\n    var ticks = self.ticks;\r\n    var rst = [];\r\n    each(ticks, function (tick) {\r\n      var obj;\r\n\r\n      if (isObject(tick)) {\r\n        obj = tick;\r\n      } else {\r\n        obj = {\r\n          text: self.getText(tick),\r\n          tickValue: tick,\r\n          value: self.scale(tick)\r\n        };\r\n      }\r\n\r\n      rst.push(obj);\r\n    });\r\n    return rst;\r\n  }\r\n  /**\r\n   * 获取格式化后的文本\r\n   * @param  {*} value 输入的数据\r\n   * @param  {*} key 字段的 key\r\n   * @return {String} 格式化的文本\r\n   */\r\n  ;\r\n\r\n  _proto.getText = function getText(value, key) {\r\n    var formatter = this.formatter;\r\n    value = formatter ? formatter(value, key) : value;\r\n\r\n    if (isNil(value) || !value.toString) {\r\n      value = '';\r\n    }\r\n\r\n    return value.toString();\r\n  }\r\n  /**\r\n   * 输出的值域最小值\r\n   * @protected\r\n   * @return {Number} 返回最小的值\r\n   */\r\n  ;\r\n\r\n  _proto.rangeMin = function rangeMin() {\r\n    return this.range[0];\r\n  }\r\n  /**\r\n   * 输出的值域最大值\r\n   * @protected\r\n   * @return {Number} 返回最大的值\r\n   */\r\n  ;\r\n\r\n  _proto.rangeMax = function rangeMax() {\r\n    var range = this.range;\r\n    return range[range.length - 1];\r\n  }\r\n  /**\r\n   * 度量转换后的结果，翻转回输入域\r\n   * @param  {Number} value 需要翻转的数值\r\n   * @return {*} 度量的输入值\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert(value) {\r\n    return value;\r\n  }\r\n  /**\r\n   * 将传入的值从非数值转换成数值格式，如分类字符串、时间字符串等\r\n   * @param  {*} value 传入的值\r\n   * @return {Number} 转换的值\r\n   */\r\n  ;\r\n\r\n  _proto.translate = function translate(value) {\r\n    return value;\r\n  }\r\n  /**\r\n   * 进行度量转换\r\n   * @param  {*} value 输入值\r\n   * @return {Number} 输出值，在设定的输出值域之间，默认[0,1]\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    return value;\r\n  }\r\n  /**\r\n   * 克隆一个新的scale,拥有跟当前scale相同的输入域、输出域等\r\n   * @return {Scale} 克隆的度量\r\n   */\r\n  ;\r\n\r\n  _proto.clone = function clone() {\r\n    var self = this;\r\n    var constr = self.constructor;\r\n    var cfg = {};\r\n    each(self, function (v, k) {\r\n      cfg[k] = self[k];\r\n    });\r\n    return new constr(cfg);\r\n  }\r\n  /**\r\n   * 更改度量的属性信息\r\n   * @param  {Object} info 属性信息\r\n   * @chainable\r\n   * @return {Scale} 返回自身的引用\r\n   */\r\n  ;\r\n\r\n  _proto.change = function change(info) {\r\n    this.ticks = null;\r\n    mix(this, info);\r\n    this.init();\r\n    return this;\r\n  };\r\n\r\n  return Scale;\r\n}();\r\n\r\nmodule.exports = Scale;\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar isObject = __webpack_require__(7);\r\n\r\nvar isArray = __webpack_require__(17);\r\n\r\nvar each = function each(elements, func) {\r\n  if (!elements) {\r\n    return;\r\n  }\r\n\r\n  var rst = void 0;\r\n\r\n  if (isArray(elements)) {\r\n    for (var i = 0, len = elements.length; i < len; i++) {\r\n      rst = func(elements[i], i);\r\n\r\n      if (rst === false) {\r\n        break;\r\n      }\r\n    }\r\n  } else if (isObject(elements)) {\r\n    for (var k in elements) {\r\n      if (elements.hasOwnProperty(k)) {\r\n        rst = func(elements[k], k);\r\n\r\n        if (rst === false) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nmodule.exports = each;\r\n\r\n/***/ }),\r\n/* 2 */\r\n/***/ (function(module, exports) {\r\n\r\n// isFinite,\r\nvar isNil = function isNil(value) {\r\n  /**\r\n   * isNil(null) => true\r\n   * isNil() => true\r\n   */\r\n  return value === null || value === undefined;\r\n};\r\n\r\nmodule.exports = isNil;\r\n\r\n/***/ }),\r\n/* 3 */\r\n/***/ (function(module, exports) {\r\n\r\nvar toString = {}.toString;\r\n\r\nvar isType = function isType(value, type) {\r\n  return toString.call(value) === '[object ' + type + ']';\r\n};\r\n\r\nmodule.exports = isType;\r\n\r\n/***/ }),\r\n/* 4 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * @fileOverview The measurement of linear data scale function\r\n * @author dxq613@gmail.com\r\n */\r\nvar isNil = __webpack_require__(2);\r\n\r\nvar each = __webpack_require__(1);\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nvar numberAuto = __webpack_require__(18);\r\n/**\r\n * 线性度量\r\n * @class Scale.Linear\r\n */\r\n\r\n\r\nvar Linear =\r\n/*#__PURE__*/\r\nfunction (_Base) {\r\n  _inheritsLoose(Linear, _Base);\r\n\r\n  function Linear() {\r\n    return _Base.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Linear.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Base.prototype._initDefaultCfg.call(this);\r\n\r\n    var self = this;\r\n    self.type = 'linear';\r\n    self.isLinear = true;\r\n    /**\r\n     * 是否为了用户习惯，优化min,max和ticks，如果进行优化，则会根据生成的ticks调整min,max，否则舍弃(min,max)范围之外的ticks\r\n     * @type {Boolean}\r\n     * @default false\r\n     */\r\n\r\n    self.nice = false;\r\n    /**\r\n     * min value of the scale\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.min = null;\r\n    /**\r\n     * min value limitted of the scale\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.minLimit = null;\r\n    /**\r\n     * max value of the scale\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.max = null;\r\n    /**\r\n     * max value limitted of the scale\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.maxLimit = null;\r\n    /**\r\n     * 自动生成标记时的个数\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.tickCount = null;\r\n    /**\r\n     * 坐标轴点之间的间距，指的是真实数据的差值\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.tickInterval = null;\r\n    /**\r\n     * 坐标轴点之间的最小间距，指的是真实数据的差值\r\n     * @type {Number}\r\n     * @default null\r\n     */\r\n\r\n    self.minTickInterval = null;\r\n    /**\r\n     * 用于计算坐标点时逼近的数组\r\n     * @type {Array}\r\n     */\r\n\r\n    self.snapArray = null;\r\n  }\r\n  /**\r\n   * @protected\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.init = function init() {\r\n    var self = this;\r\n\r\n    if (!self.ticks) {\r\n      self.min = self.translate(self.min);\r\n      self.max = self.translate(self.max);\r\n      self.initTicks();\r\n    } else {\r\n      var ticks = self.ticks;\r\n      var firstValue = self.translate(ticks[0]);\r\n      var lastValue = self.translate(ticks[ticks.length - 1]);\r\n\r\n      if (isNil(self.min) || self.min > firstValue) {\r\n        self.min = firstValue;\r\n      }\r\n\r\n      if (isNil(self.max) || self.max < lastValue) {\r\n        self.max = lastValue;\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * 计算坐标点\r\n   * @protected\r\n   * @return {Array} 计算完成的坐标点\r\n   */\r\n  ;\r\n\r\n  _proto.calculateTicks = function calculateTicks() {\r\n    var min = this.min,\r\n        max = this.max,\r\n        minLimit = this.minLimit,\r\n        maxLimit = this.maxLimit,\r\n        tickCount = this.tickCount,\r\n        tickInterval = this.tickInterval,\r\n        minTickInterval = this.minTickInterval,\r\n        snapArray = this.snapArray;\r\n\r\n    if (tickCount === 1) {\r\n      throw new Error('linear scale\\'tickCount should not be 1');\r\n    }\r\n\r\n    if (max < min) {\r\n      throw new Error(\"max: \" + max + \" should not be less than min: \" + min);\r\n    }\r\n\r\n    var tmp = numberAuto({\r\n      min: min,\r\n      max: max,\r\n      minLimit: minLimit,\r\n      maxLimit: maxLimit,\r\n      minCount: tickCount,\r\n      maxCount: tickCount,\r\n      interval: tickInterval,\r\n      minTickInterval: minTickInterval,\r\n      snapArray: snapArray\r\n    });\r\n    return tmp.ticks;\r\n  } // 初始化ticks\r\n  ;\r\n\r\n  _proto.initTicks = function initTicks() {\r\n    var self = this;\r\n    var calTicks = self.calculateTicks();\r\n\r\n    if (self.nice) {\r\n      // 如果需要优化显示的tick\r\n      self.ticks = calTicks;\r\n      self.min = calTicks[0];\r\n      self.max = calTicks[calTicks.length - 1];\r\n    } else {\r\n      var ticks = [];\r\n      each(calTicks, function (tick) {\r\n        if (tick >= self.min && tick <= self.max) {\r\n          ticks.push(tick);\r\n        }\r\n      }); // 如果 ticks 为空，直接输入最小值、最大值\r\n\r\n      if (!ticks.length) {\r\n        ticks.push(self.min);\r\n        ticks.push(self.max);\r\n      }\r\n\r\n      self.ticks = ticks;\r\n    }\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    if (isNil(value)) {\r\n      return NaN;\r\n    }\r\n\r\n    var max = this.max;\r\n    var min = this.min;\r\n\r\n    if (max === min) {\r\n      return 0;\r\n    }\r\n\r\n    var percent = (value - min) / (max - min);\r\n    var rangeMin = this.rangeMin();\r\n    var rangeMax = this.rangeMax();\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert(value) {\r\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\r\n    return this.min + percent * (this.max - this.min);\r\n  };\r\n\r\n  return Linear;\r\n}(Base);\r\n\r\nBase.Linear = Linear;\r\nmodule.exports = Linear;\r\n\r\n/***/ }),\r\n/* 5 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * 判断是否数字\r\n * @return {Boolean} 是否数字\r\n */\r\nvar isType = __webpack_require__(3);\r\n\r\nvar isNumber = function isNumber(value) {\r\n  return isType(value, 'Number');\r\n};\r\n\r\nmodule.exports = isNumber;\r\n\r\n/***/ }),\r\n/* 6 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar isType = __webpack_require__(3);\r\n\r\nvar isString = function isString(str) {\r\n  return isType(str, 'String');\r\n};\r\n\r\nmodule.exports = isString;\r\n\r\n/***/ }),\r\n/* 7 */\r\n/***/ (function(module, exports) {\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n  return typeof obj;\r\n} : function (obj) {\r\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n};\r\n\r\nvar isObject = function isObject(value) {\r\n  /**\r\n   * isObject({}) => true\r\n   * isObject([1, 2, 3]) => true\r\n   * isObject(Function) => true\r\n   * isObject(null) => false\r\n   */\r\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\r\n  return value !== null && type === 'object' || type === 'function';\r\n};\r\n\r\nmodule.exports = isObject;\r\n\r\n/***/ }),\r\n/* 8 */\r\n/***/ (function(module, exports) {\r\n\r\n/**\r\n * @fileOverview 计算方法\r\n * @author dxq613@gmail.com\r\n */\r\n// 如果小数点后面超过 10 位浮点数时进行一下处理\r\nvar DECIMAL_LENGTH = 12; // 获取系数\r\n\r\nfunction getFactor(v) {\r\n  var factor = 1;\r\n\r\n  if (v === Infinity || v === -Infinity) {\r\n    throw new Error('Not support Infinity!');\r\n  }\r\n\r\n  if (v < 1) {\r\n    var count = 0;\r\n\r\n    while (v < 1) {\r\n      factor = factor / 10;\r\n      v = v * 10;\r\n      count++;\r\n    } // 浮点数计算出现问题\r\n\r\n\r\n    if (factor.toString().length > DECIMAL_LENGTH) {\r\n      factor = parseFloat(factor.toFixed(count));\r\n    }\r\n  } else {\r\n    while (v > 10) {\r\n      factor = factor * 10;\r\n      v = v / 10;\r\n    }\r\n  }\r\n\r\n  return factor;\r\n} // 取小于当前值的\r\n\r\n\r\nfunction arrayFloor(values, value) {\r\n  var length = values.length;\r\n\r\n  if (length === 0) {\r\n    return NaN;\r\n  }\r\n\r\n  var pre = values[0];\r\n\r\n  if (value < values[0]) {\r\n    return NaN;\r\n  }\r\n\r\n  if (value >= values[length - 1]) {\r\n    return values[length - 1];\r\n  }\r\n\r\n  for (var i = 1; i < values.length; i++) {\r\n    if (value < values[i]) {\r\n      break;\r\n    }\r\n\r\n    pre = values[i];\r\n  }\r\n\r\n  return pre;\r\n} // 大于当前值的第一个\r\n\r\n\r\nfunction arrayCeiling(values, value) {\r\n  var length = values.length;\r\n\r\n  if (length === 0) {\r\n    return NaN;\r\n  } // var pre = values[0];\r\n\r\n\r\n  var rst;\r\n\r\n  if (value > values[length - 1]) {\r\n    return NaN;\r\n  }\r\n\r\n  if (value < values[0]) {\r\n    return values[0];\r\n  }\r\n\r\n  for (var i = 1; i < values.length; i++) {\r\n    if (value <= values[i]) {\r\n      rst = values[i];\r\n      break;\r\n    }\r\n  }\r\n\r\n  return rst;\r\n}\r\n\r\nvar Util = {\r\n  // 获取逼近的数值\r\n  snapFactorTo: function snapFactorTo(v, arr, snapType) {\r\n    // 假设 v = -512,isFloor = true\r\n    if (isNaN(v)) {\r\n      return NaN;\r\n    }\r\n\r\n    var factor = 1; // 计算系数\r\n\r\n    if (v !== 0) {\r\n      if (v < 0) {\r\n        factor = -1;\r\n      }\r\n\r\n      v = v * factor; // v = 512\r\n\r\n      var tmpFactor = getFactor(v);\r\n      factor = factor * tmpFactor; // factor = -100\r\n\r\n      v = v / tmpFactor; // v = 5.12\r\n    }\r\n\r\n    if (snapType === 'floor') {\r\n      v = Util.snapFloor(arr, v); // v = 5\r\n    } else if (snapType === 'ceil') {\r\n      v = Util.snapCeiling(arr, v); // v = 6\r\n    } else {\r\n      v = Util.snapTo(arr, v); // 四舍五入 5\r\n    }\r\n\r\n    var rst = parseFloat((v * factor).toPrecision(DECIMAL_LENGTH)); // 如果出现浮点数计算问题，需要处理一下\r\n    // 如果出现浮点数计算问题，需要处理一下\r\n\r\n    if (Math.abs(factor) < 1 && rst.toString().length > DECIMAL_LENGTH) {\r\n      var decimalVal = parseInt(1 / factor);\r\n      var symbol = factor > 0 ? 1 : -1;\r\n      rst = v / decimalVal * symbol;\r\n    }\r\n\r\n    return rst;\r\n  },\r\n  // 获取逼近的倍数\r\n  snapMultiple: function snapMultiple(v, base, snapType) {\r\n    var div;\r\n\r\n    if (snapType === 'ceil') {\r\n      div = Math.ceil(v / base);\r\n    } else if (snapType === 'floor') {\r\n      div = Math.floor(v / base);\r\n    } else {\r\n      div = Math.round(v / base);\r\n    }\r\n\r\n    return div * base;\r\n  },\r\n\r\n  /**\r\n   * 获取逼近的值，用于对齐数据\r\n   * @param  {Array} values   数据集合\r\n   * @param  {Number} value   数值\r\n   * @return {Number} 逼近的值\r\n   */\r\n  snapTo: function snapTo(values, value) {\r\n    // 这里假定values是升序排列\r\n    var floorVal = arrayFloor(values, value);\r\n    var ceilingVal = arrayCeiling(values, value);\r\n\r\n    if (isNaN(floorVal) || isNaN(ceilingVal)) {\r\n      if (values[0] >= value) {\r\n        return values[0];\r\n      }\r\n\r\n      var last = values[values.length - 1];\r\n\r\n      if (last <= value) {\r\n        return last;\r\n      }\r\n    }\r\n\r\n    if (Math.abs(value - floorVal) < Math.abs(ceilingVal - value)) {\r\n      return floorVal;\r\n    }\r\n\r\n    return ceilingVal;\r\n  },\r\n\r\n  /**\r\n   * 获取逼近的最小值，用于对齐数据\r\n   * @param  {Array} values   数据集合\r\n   * @param  {Number} value   数值\r\n   * @return {Number} 逼近的最小值\r\n   */\r\n  snapFloor: function snapFloor(values, value) {\r\n    // 这里假定values是升序排列\r\n    return arrayFloor(values, value);\r\n  },\r\n\r\n  /**\r\n   * 获取逼近的最大值，用于对齐数据\r\n   * @param  {Array} values   数据集合\r\n   * @param  {Number} value   数值\r\n   * @return {Number} 逼近的最大值\r\n   */\r\n  snapCeiling: function snapCeiling(values, value) {\r\n    // 这里假定values是升序排列\r\n    return arrayCeiling(values, value);\r\n  },\r\n  fixedBase: function fixedBase(v, base) {\r\n    var str = base.toString();\r\n    var index = str.indexOf('.');\r\n    var indexOfExp = str.indexOf('e-'); // 判断是否带小数点，1.000001 1.23e-9\r\n\r\n    if (index < 0 && indexOfExp < 0) {\r\n      // base为整数\r\n      return Math.round(v);\r\n    }\r\n\r\n    var length = indexOfExp >= 0 ? parseInt(str.substr(indexOfExp + 2), 10) : str.substr(index + 1).length;\r\n\r\n    if (length > 20) {\r\n      length = 20;\r\n    }\r\n\r\n    return parseFloat(v.toFixed(length));\r\n  }\r\n};\r\nmodule.exports = Util;\r\n\r\n/***/ }),\r\n/* 9 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nvar catAuto = __webpack_require__(10);\r\n\r\nvar each = __webpack_require__(1);\r\n\r\nvar isNumber = __webpack_require__(5);\r\n\r\nvar isString = __webpack_require__(6);\r\n\r\nvar Category =\r\n/*#__PURE__*/\r\nfunction (_Base) {\r\n  _inheritsLoose(Category, _Base);\r\n\r\n  function Category() {\r\n    return _Base.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Category.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Base.prototype._initDefaultCfg.call(this);\r\n\r\n    this.type = 'cat';\r\n    /**\r\n     * 是否分类度量\r\n     * @type {Boolean}\r\n     */\r\n\r\n    this.isCategory = true;\r\n    this.isRounding = true; // 是否进行取整操作\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.init = function init() {\r\n    var self = this;\r\n    var values = self.values;\r\n    var tickCount = self.tickCount;\r\n    each(values, function (v, i) {\r\n      values[i] = v.toString();\r\n    });\r\n\r\n    if (!self.ticks) {\r\n      var ticks = values;\r\n\r\n      if (tickCount) {\r\n        var temp = catAuto({\r\n          maxCount: tickCount,\r\n          data: values,\r\n          isRounding: self.isRounding\r\n        });\r\n        ticks = temp.ticks;\r\n      }\r\n\r\n      this.ticks = ticks;\r\n    }\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.getText = function getText(value) {\r\n    if (this.values.indexOf(value) === -1 && isNumber(value)) {\r\n      value = this.values[Math.round(value)];\r\n    }\r\n\r\n    return _Base.prototype.getText.call(this, value);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.translate = function translate(value) {\r\n    var index = this.values.indexOf(value);\r\n\r\n    if (index === -1 && isNumber(value)) {\r\n      index = value;\r\n    } else if (index === -1) {\r\n      index = NaN;\r\n    }\r\n\r\n    return index;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    var rangeMin = this.rangeMin();\r\n    var rangeMax = this.rangeMax();\r\n    var percent;\r\n\r\n    if (isString(value) || this.values.indexOf(value) !== -1) {\r\n      value = this.translate(value);\r\n    }\r\n\r\n    if (this.values.length > 1) {\r\n      percent = value / (this.values.length - 1);\r\n    } else {\r\n      percent = value;\r\n    }\r\n\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert(value) {\r\n    if (isString(value)) {\r\n      // 如果已经是字符串\r\n      return value;\r\n    }\r\n\r\n    var min = this.rangeMin();\r\n    var max = this.rangeMax(); // 归一到 范围内\r\n\r\n    if (value < min) {\r\n      value = min;\r\n    }\r\n\r\n    if (value > max) {\r\n      value = max;\r\n    }\r\n\r\n    var percent = (value - min) / (max - min);\r\n    var index = Math.round(percent * (this.values.length - 1)) % this.values.length;\r\n    index = index || 0;\r\n    return this.values[index];\r\n  };\r\n\r\n  return Category;\r\n}(Base);\r\n\r\nBase.Cat = Category;\r\nmodule.exports = Category;\r\n\r\n/***/ }),\r\n/* 10 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * @fileOverview 计算分类的的坐标点\r\n * @author dxq613@gmail.com\r\n */\r\nvar each = __webpack_require__(1);\r\n\r\nvar MAX_COUNT = 8;\r\nvar SUB_COUNT = 4; // 控制个数不能过小\r\n\r\nfunction getSimpleArray(data) {\r\n  var arr = [];\r\n  each(data, function (sub) {\r\n    arr = arr.concat(sub);\r\n  });\r\n  return arr;\r\n}\r\n\r\nfunction getGreatestFactor(count, number) {\r\n  var i;\r\n\r\n  for (i = number; i > 0; i--) {\r\n    if (count % i === 0) {\r\n      break;\r\n    }\r\n  } // 如果是素数，没有可以整除的数字\r\n\r\n\r\n  if (i === 1) {\r\n    for (i = number; i > 0; i--) {\r\n      if ((count - 1) % i === 0) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return i;\r\n}\r\n\r\nmodule.exports = function (info) {\r\n  var rst = {};\r\n  var ticks = [];\r\n  var isRounding = info.isRounding;\r\n  var categories = getSimpleArray(info.data);\r\n  var length = categories.length;\r\n  var maxCount = info.maxCount || MAX_COUNT;\r\n  var tickCount;\r\n\r\n  if (isRounding) {\r\n    // 取整操作\r\n    tickCount = getGreatestFactor(length - 1, maxCount - 1) + 1; // 如果计算出来只有两个坐标点，则直接使用传入的 maxCount\r\n\r\n    if (tickCount === 2) {\r\n      tickCount = maxCount;\r\n    } else if (tickCount < maxCount - SUB_COUNT) {\r\n      tickCount = maxCount - SUB_COUNT;\r\n    }\r\n  } else {\r\n    tickCount = maxCount;\r\n  }\r\n\r\n  if (!isRounding && length <= tickCount + tickCount / 2) {\r\n    ticks = [].concat(categories);\r\n  } else {\r\n    var step = parseInt(length / (tickCount - 1), 10);\r\n    var groups = categories.map(function (e, i) {\r\n      return i % step === 0 ? categories.slice(i, i + step) : null;\r\n    }).filter(function (e) {\r\n      return e;\r\n    });\r\n\r\n    for (var i = 1, groupLen = groups.length; i < groupLen && (isRounding ? i * step < length - step : i < tickCount - 1); i++) {\r\n      ticks.push(groups[i][0]);\r\n    }\r\n\r\n    if (categories.length) {\r\n      ticks.unshift(categories[0]);\r\n      var last = categories[length - 1];\r\n\r\n      if (ticks.indexOf(last) === -1) {\r\n        ticks.push(last);\r\n      }\r\n    }\r\n  }\r\n\r\n  rst.categories = categories;\r\n  rst.ticks = ticks;\r\n  return rst;\r\n};\r\n\r\n/***/ }),\r\n/* 11 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function (main) {\r\n  \r\n  /**\r\n   * Parse or format dates\r\n   * @class fecha\r\n   */\r\n\r\n  var fecha = {};\r\n  var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\\1?|[aA]|\"[^\"]*\"|'[^']*'/g;\r\n  var twoDigits = /\\d\\d?/;\r\n  var threeDigits = /\\d{3}/;\r\n  var fourDigits = /\\d{4}/;\r\n  var word = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\r\n  var literal = /\\[([^]*?)\\]/gm;\r\n\r\n  var noop = function () {};\r\n\r\n  function shorten(arr, sLen) {\r\n    var newArr = [];\r\n\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n      newArr.push(arr[i].substr(0, sLen));\r\n    }\r\n\r\n    return newArr;\r\n  }\r\n\r\n  function monthUpdate(arrName) {\r\n    return function (d, v, i18n) {\r\n      var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());\r\n\r\n      if (~index) {\r\n        d.month = index;\r\n      }\r\n    };\r\n  }\r\n\r\n  function pad(val, len) {\r\n    val = String(val);\r\n    len = len || 2;\r\n\r\n    while (val.length < len) {\r\n      val = '0' + val;\r\n    }\r\n\r\n    return val;\r\n  }\r\n\r\n  var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n  var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n  var monthNamesShort = shorten(monthNames, 3);\r\n  var dayNamesShort = shorten(dayNames, 3);\r\n  fecha.i18n = {\r\n    dayNamesShort: dayNamesShort,\r\n    dayNames: dayNames,\r\n    monthNamesShort: monthNamesShort,\r\n    monthNames: monthNames,\r\n    amPm: ['am', 'pm'],\r\n    DoFn: function DoFn(D) {\r\n      return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];\r\n    }\r\n  };\r\n  var formatFlags = {\r\n    D: function (dateObj) {\r\n      return dateObj.getDate();\r\n    },\r\n    DD: function (dateObj) {\r\n      return pad(dateObj.getDate());\r\n    },\r\n    Do: function (dateObj, i18n) {\r\n      return i18n.DoFn(dateObj.getDate());\r\n    },\r\n    d: function (dateObj) {\r\n      return dateObj.getDay();\r\n    },\r\n    dd: function (dateObj) {\r\n      return pad(dateObj.getDay());\r\n    },\r\n    ddd: function (dateObj, i18n) {\r\n      return i18n.dayNamesShort[dateObj.getDay()];\r\n    },\r\n    dddd: function (dateObj, i18n) {\r\n      return i18n.dayNames[dateObj.getDay()];\r\n    },\r\n    M: function (dateObj) {\r\n      return dateObj.getMonth() + 1;\r\n    },\r\n    MM: function (dateObj) {\r\n      return pad(dateObj.getMonth() + 1);\r\n    },\r\n    MMM: function (dateObj, i18n) {\r\n      return i18n.monthNamesShort[dateObj.getMonth()];\r\n    },\r\n    MMMM: function (dateObj, i18n) {\r\n      return i18n.monthNames[dateObj.getMonth()];\r\n    },\r\n    YY: function (dateObj) {\r\n      return String(dateObj.getFullYear()).substr(2);\r\n    },\r\n    YYYY: function (dateObj) {\r\n      return pad(dateObj.getFullYear(), 4);\r\n    },\r\n    h: function (dateObj) {\r\n      return dateObj.getHours() % 12 || 12;\r\n    },\r\n    hh: function (dateObj) {\r\n      return pad(dateObj.getHours() % 12 || 12);\r\n    },\r\n    H: function (dateObj) {\r\n      return dateObj.getHours();\r\n    },\r\n    HH: function (dateObj) {\r\n      return pad(dateObj.getHours());\r\n    },\r\n    m: function (dateObj) {\r\n      return dateObj.getMinutes();\r\n    },\r\n    mm: function (dateObj) {\r\n      return pad(dateObj.getMinutes());\r\n    },\r\n    s: function (dateObj) {\r\n      return dateObj.getSeconds();\r\n    },\r\n    ss: function (dateObj) {\r\n      return pad(dateObj.getSeconds());\r\n    },\r\n    S: function (dateObj) {\r\n      return Math.round(dateObj.getMilliseconds() / 100);\r\n    },\r\n    SS: function (dateObj) {\r\n      return pad(Math.round(dateObj.getMilliseconds() / 10), 2);\r\n    },\r\n    SSS: function (dateObj) {\r\n      return pad(dateObj.getMilliseconds(), 3);\r\n    },\r\n    a: function (dateObj, i18n) {\r\n      return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];\r\n    },\r\n    A: function (dateObj, i18n) {\r\n      return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();\r\n    },\r\n    ZZ: function (dateObj) {\r\n      var o = dateObj.getTimezoneOffset();\r\n      return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);\r\n    }\r\n  };\r\n  var parseFlags = {\r\n    D: [twoDigits, function (d, v) {\r\n      d.day = v;\r\n    }],\r\n    Do: [new RegExp(twoDigits.source + word.source), function (d, v) {\r\n      d.day = parseInt(v, 10);\r\n    }],\r\n    M: [twoDigits, function (d, v) {\r\n      d.month = v - 1;\r\n    }],\r\n    YY: [twoDigits, function (d, v) {\r\n      var da = new Date(),\r\n          cent = +('' + da.getFullYear()).substr(0, 2);\r\n      d.year = '' + (v > 68 ? cent - 1 : cent) + v;\r\n    }],\r\n    h: [twoDigits, function (d, v) {\r\n      d.hour = v;\r\n    }],\r\n    m: [twoDigits, function (d, v) {\r\n      d.minute = v;\r\n    }],\r\n    s: [twoDigits, function (d, v) {\r\n      d.second = v;\r\n    }],\r\n    YYYY: [fourDigits, function (d, v) {\r\n      d.year = v;\r\n    }],\r\n    S: [/\\d/, function (d, v) {\r\n      d.millisecond = v * 100;\r\n    }],\r\n    SS: [/\\d{2}/, function (d, v) {\r\n      d.millisecond = v * 10;\r\n    }],\r\n    SSS: [threeDigits, function (d, v) {\r\n      d.millisecond = v;\r\n    }],\r\n    d: [twoDigits, noop],\r\n    ddd: [word, noop],\r\n    MMM: [word, monthUpdate('monthNamesShort')],\r\n    MMMM: [word, monthUpdate('monthNames')],\r\n    a: [word, function (d, v, i18n) {\r\n      var val = v.toLowerCase();\r\n\r\n      if (val === i18n.amPm[0]) {\r\n        d.isPm = false;\r\n      } else if (val === i18n.amPm[1]) {\r\n        d.isPm = true;\r\n      }\r\n    }],\r\n    ZZ: [/([\\+\\-]\\d\\d:?\\d\\d|Z)/, function (d, v) {\r\n      if (v === 'Z') v = '+00:00';\r\n      var parts = (v + '').match(/([\\+\\-]|\\d\\d)/gi),\r\n          minutes;\r\n\r\n      if (parts) {\r\n        minutes = +(parts[1] * 60) + parseInt(parts[2], 10);\r\n        d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;\r\n      }\r\n    }]\r\n  };\r\n  parseFlags.dd = parseFlags.d;\r\n  parseFlags.dddd = parseFlags.ddd;\r\n  parseFlags.DD = parseFlags.D;\r\n  parseFlags.mm = parseFlags.m;\r\n  parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;\r\n  parseFlags.MM = parseFlags.M;\r\n  parseFlags.ss = parseFlags.s;\r\n  parseFlags.A = parseFlags.a; // Some common format strings\r\n\r\n  fecha.masks = {\r\n    default: 'ddd MMM DD YYYY HH:mm:ss',\r\n    shortDate: 'M/D/YY',\r\n    mediumDate: 'MMM D, YYYY',\r\n    longDate: 'MMMM D, YYYY',\r\n    fullDate: 'dddd, MMMM D, YYYY',\r\n    shortTime: 'HH:mm',\r\n    mediumTime: 'HH:mm:ss',\r\n    longTime: 'HH:mm:ss.SSS'\r\n  };\r\n  /***\r\n   * Format a date\r\n   * @method format\r\n   * @param {Date|number} dateObj\r\n   * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'\r\n   */\r\n\r\n  fecha.format = function (dateObj, mask, i18nSettings) {\r\n    var i18n = i18nSettings || fecha.i18n;\r\n\r\n    if (typeof dateObj === 'number') {\r\n      dateObj = new Date(dateObj);\r\n    }\r\n\r\n    if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {\r\n      throw new Error('Invalid Date in fecha.format');\r\n    }\r\n\r\n    mask = fecha.masks[mask] || mask || fecha.masks['default'];\r\n    var literals = []; // Make literals inactive by replacing them with ??\r\n\r\n    mask = mask.replace(literal, function ($0, $1) {\r\n      literals.push($1);\r\n      return '??';\r\n    }); // Apply formatting rules\r\n\r\n    mask = mask.replace(token, function ($0) {\r\n      return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);\r\n    }); // Inline literal values back into the formatted value\r\n\r\n    return mask.replace(/\\?\\?/g, function () {\r\n      return literals.shift();\r\n    });\r\n  };\r\n  /**\r\n   * Parse a date string into an object, changes - into /\r\n   * @method parse\r\n   * @param {string} dateStr Date string\r\n   * @param {string} format Date parse format\r\n   * @returns {Date|boolean}\r\n   */\r\n\r\n\r\n  fecha.parse = function (dateStr, format, i18nSettings) {\r\n    var i18n = i18nSettings || fecha.i18n;\r\n\r\n    if (typeof format !== 'string') {\r\n      throw new Error('Invalid format in fecha.parse');\r\n    }\r\n\r\n    format = fecha.masks[format] || format; // Avoid regular expression denial of service, fail early for really long strings\r\n    // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS\r\n\r\n    if (dateStr.length > 1000) {\r\n      return false;\r\n    }\r\n\r\n    var isValid = true;\r\n    var dateInfo = {};\r\n    format.replace(token, function ($0) {\r\n      if (parseFlags[$0]) {\r\n        var info = parseFlags[$0];\r\n        var index = dateStr.search(info[0]);\r\n\r\n        if (!~index) {\r\n          isValid = false;\r\n        } else {\r\n          dateStr.replace(info[0], function (result) {\r\n            info[1](dateInfo, result, i18n);\r\n            dateStr = dateStr.substr(index + result.length);\r\n            return result;\r\n          });\r\n        }\r\n      }\r\n\r\n      return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);\r\n    });\r\n\r\n    if (!isValid) {\r\n      return false;\r\n    }\r\n\r\n    var today = new Date();\r\n\r\n    if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {\r\n      dateInfo.hour = +dateInfo.hour + 12;\r\n    } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {\r\n      dateInfo.hour = 0;\r\n    }\r\n\r\n    var date;\r\n\r\n    if (dateInfo.timezoneOffset != null) {\r\n      dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;\r\n      date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));\r\n    } else {\r\n      date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1, dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);\r\n    }\r\n\r\n    return date;\r\n  };\r\n  /* istanbul ignore next */\r\n\r\n\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = fecha;\r\n  } else if (true) {\r\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n      return fecha;\r\n    }).call(exports, __webpack_require__, exports, module),\r\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n  } else {\r\n    main.fecha = fecha;\r\n  }\r\n})(this);\r\n\r\n/***/ }),\r\n/* 12 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * @fileOverview 提取公共代码到util方法\r\n * @author dxq613@gmail.com\r\n */\r\nvar isString = __webpack_require__(6);\r\n\r\nvar isDate = __webpack_require__(22);\r\n\r\nmodule.exports = {\r\n  toTimeStamp: function toTimeStamp(value) {\r\n    if (isString(value)) {\r\n      if (value.indexOf('T') > 0) {\r\n        value = new Date(value).getTime();\r\n      } else {\r\n        value = new Date(value.replace(/-/ig, '/')).getTime();\r\n      }\r\n    }\r\n\r\n    if (isDate(value)) {\r\n      value = value.getTime();\r\n    }\r\n\r\n    return value;\r\n  }\r\n};\r\n\r\n/***/ }),\r\n/* 13 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * @fileOverview Scale entry, used to reference all the scales\r\n * @author dxq613@gmail.com\r\n */\r\nvar lowerFirst = __webpack_require__(14);\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nBase.Linear = __webpack_require__(4);\r\nBase.Identity = __webpack_require__(19);\r\nBase.Cat = __webpack_require__(9);\r\nBase.Time = __webpack_require__(20);\r\nBase.TimeCat = __webpack_require__(23);\r\nBase.Log = __webpack_require__(24);\r\nBase.Pow = __webpack_require__(25);\r\n\r\nvar _loop = function _loop(k) {\r\n  if (Base.hasOwnProperty(k)) {\r\n    var methodName = lowerFirst(k);\r\n\r\n    Base[methodName] = function (cfg) {\r\n      return new Base[k](cfg);\r\n    };\r\n  }\r\n};\r\n\r\nfor (var k in Base) {\r\n  _loop(k);\r\n}\r\n\r\nvar CAT_ARR = ['cat', 'timeCat'];\r\n\r\nBase.isCategory = function (type) {\r\n  return CAT_ARR.indexOf(type) >= 0;\r\n};\r\n\r\nmodule.exports = Base;\r\n\r\n/***/ }),\r\n/* 14 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar toString = __webpack_require__(15);\r\n\r\nvar lowerFirst = function lowerFirst(value) {\r\n  var str = toString(value);\r\n  return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\nmodule.exports = lowerFirst;\r\n\r\n/***/ }),\r\n/* 15 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar isNil = __webpack_require__(2);\r\n\r\nfunction toString(value) {\r\n  if (isNil(value)) return '';\r\n  return value.toString();\r\n}\r\n\r\nmodule.exports = toString;\r\n\r\n/***/ }),\r\n/* 16 */\r\n/***/ (function(module, exports) {\r\n\r\nfunction _mix(dist, obj) {\r\n  for (var key in obj) {\r\n    if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {\r\n      dist[key] = obj[key];\r\n    }\r\n  }\r\n}\r\n\r\nvar mix = function mix(dist, src1, src2, src3) {\r\n  if (src1) _mix(dist, src1);\r\n  if (src2) _mix(dist, src2);\r\n  if (src3) _mix(dist, src3);\r\n  return dist;\r\n};\r\n\r\nmodule.exports = mix;\r\n\r\n/***/ }),\r\n/* 17 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar isType = __webpack_require__(3);\r\n\r\nvar isArray = Array.isArray ? Array.isArray : function (value) {\r\n  return isType(value, 'Array');\r\n};\r\nmodule.exports = isArray;\r\n\r\n/***/ }),\r\n/* 18 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * @fileOverview 自动计算数字坐标轴\r\n * @author dxq613@gmail.com\r\n */\r\nvar isNil = __webpack_require__(2);\r\n\r\nvar isNumber = __webpack_require__(5);\r\n\r\nvar AutoUtil = __webpack_require__(8);\r\n\r\nvar MIN_COUNT = 5;\r\nvar MAX_COUNT = 7;\r\nvar SNAP_COUNT_ARRAY = [0, 1, 1.2, 1.5, 1.6, 2, 2.2, 2.4, 2.5, 3, 4, 5, 6, 7.5, 8, 10];\r\nvar SNAP_ARRAY = [0, 1, 2, 4, 5, 10];\r\nvar EPS = 1e-12;\r\n\r\nmodule.exports = function (info) {\r\n  var min = info.min;\r\n  var max = info.max;\r\n  var interval = info.interval;\r\n  var minTickInterval = info.minTickInterval;\r\n  var ticks = [];\r\n  var minCount = info.minCount || MIN_COUNT;\r\n  var maxCount = info.maxCount || MAX_COUNT;\r\n  var isFixedCount = minCount === maxCount; // 是否限定死了个数\r\n\r\n  var minLimit = isNil(info.minLimit) ? -Infinity : info.minLimit; // 限定的最小值\r\n\r\n  var maxLimit = isNil(info.maxLimit) ? Infinity : info.maxLimit; // 限定最大值\r\n\r\n  var avgCount = (minCount + maxCount) / 2;\r\n  var count = avgCount; // 用户传入的逼近数组\r\n\r\n  var snapArray = info.snapArray ? info.snapArray : isFixedCount ? SNAP_COUNT_ARRAY : SNAP_ARRAY; // 如果限定大小范围，同时大小范围等于用户传入的范围，同时限定了个数，interval 按照个数均分\r\n\r\n  if (min === minLimit && max === maxLimit && isFixedCount) {\r\n    interval = (max - min) / (count - 1);\r\n  }\r\n\r\n  if (isNil(min)) {\r\n    min = 0;\r\n  }\r\n\r\n  if (isNil(max)) {\r\n    max = 0;\r\n  }\r\n\r\n  if (Math.abs(max - min) < EPS) {\r\n    if (min === 0) {\r\n      max = 1;\r\n    } else {\r\n      if (min > 0) {\r\n        min = 0;\r\n      } else {\r\n        max = 0;\r\n      }\r\n    }\r\n\r\n    if (max - min < 5 && !interval && max - min >= 1) {\r\n      interval = 1;\r\n    }\r\n  }\r\n\r\n  if (isNil(interval)) {\r\n    // 计算间距\r\n    var temp = (max - min) / (avgCount - 1);\r\n    interval = AutoUtil.snapFactorTo(temp, snapArray, 'ceil');\r\n\r\n    if (maxCount !== minCount) {\r\n      count = parseInt((max - min) / interval, 10);\r\n\r\n      if (count > maxCount) {\r\n        count = maxCount;\r\n      }\r\n\r\n      if (count < minCount) {\r\n        count = minCount;\r\n      } // 不确定tick的个数时，使得tick偏小\r\n\r\n\r\n      interval = AutoUtil.snapFactorTo((max - min) / (count - 1), snapArray, 'floor');\r\n    }\r\n  } // interval should not be less than minTickInterval\r\n\r\n\r\n  if (isNumber(minTickInterval) && interval < minTickInterval) {\r\n    interval = minTickInterval;\r\n  }\r\n\r\n  if (info.interval || maxCount !== minCount) {\r\n    // 校正 max 和 min\r\n    max = Math.min(AutoUtil.snapMultiple(max, interval, 'ceil'), maxLimit); // 向上逼近\r\n\r\n    min = Math.max(AutoUtil.snapMultiple(min, interval, 'floor'), minLimit); // 向下逼近\r\n\r\n    count = Math.round((max - min) / interval);\r\n    min = AutoUtil.fixedBase(min, interval); // 当min为负数的时候，fixedBase后，min可能会大于minLimit，导致最终产出的tick是大于minLimit的，所以必须进行修正\r\n\r\n    max = AutoUtil.fixedBase(max, interval);\r\n    var prevMin = null;\r\n\r\n    while (min > minLimit && minLimit > -Infinity && (prevMin === null || min < prevMin)) {\r\n      // 保证计算出来的刻度最小值 min， 不大于数据最小值 min\r\n      prevMin = min;\r\n      min = AutoUtil.fixedBase(min - interval, interval);\r\n    }\r\n  } else {\r\n    avgCount = parseInt(avgCount, 10); // 取整\r\n\r\n    var avg = (max + min) / 2;\r\n    var avgTick = AutoUtil.snapMultiple(avg, interval, 'ceil');\r\n    var sideCount = Math.floor((avgCount - 2) / 2);\r\n    var maxTick = avgTick + sideCount * interval;\r\n    var minTick;\r\n\r\n    if (avgCount % 2 === 0) {\r\n      minTick = avgTick - sideCount * interval;\r\n    } else {\r\n      minTick = avgTick - (sideCount + 1) * interval;\r\n    }\r\n\r\n    var prevMaxTick = null; // 如果减去intervl, fixBase后，新的minTick没有大于之前的值，就退出，防止死循环\r\n\r\n    while (maxTick < max && (prevMaxTick === null || maxTick > prevMaxTick)) {\r\n      // 保证计算出来的刻度最大值 maxTick 不小于数据最大值 max\r\n      prevMaxTick = maxTick;\r\n      maxTick = AutoUtil.fixedBase(maxTick + interval, interval);\r\n    }\r\n\r\n    var prevMinTick = null; // 如果减去intervl, fixBase后，新的minTick没有小于之前的值，就退出，防止死循环\r\n\r\n    while (minTick > min && (prevMinTick === null || minTick < prevMinTick)) {\r\n      // 保证计算出来的刻度最小值 minTick 不大于数据最小值 min\r\n      prevMinTick = minTick;\r\n      minTick = AutoUtil.fixedBase(minTick - interval, interval); // 防止超常浮点数计算问题\r\n    }\r\n\r\n    max = maxTick;\r\n    min = minTick;\r\n  }\r\n\r\n  max = Math.min(max, maxLimit);\r\n  min = Math.max(min, minLimit);\r\n  ticks.push(min);\r\n\r\n  for (var i = 1; i < count; i++) {\r\n    var tickValue = AutoUtil.fixedBase(interval * i + min, interval);\r\n\r\n    if (tickValue < max) {\r\n      ticks.push(tickValue);\r\n    }\r\n  }\r\n\r\n  if (ticks[ticks.length - 1] < max) {\r\n    ticks.push(max);\r\n  }\r\n\r\n  return {\r\n    min: min,\r\n    max: max,\r\n    interval: interval,\r\n    count: count,\r\n    ticks: ticks\r\n  };\r\n};\r\n\r\n/***/ }),\r\n/* 19 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nvar isNumber = __webpack_require__(5);\r\n\r\nvar Identity =\r\n/*#__PURE__*/\r\nfunction (_Base) {\r\n  _inheritsLoose(Identity, _Base);\r\n\r\n  function Identity() {\r\n    return _Base.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Identity.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Base.prototype._initDefaultCfg.call(this);\r\n\r\n    this.isIdentity = true;\r\n    this.type = 'identity';\r\n    /**\r\n     * 常量值\r\n     * @type {*}\r\n     */\r\n\r\n    this.value = null;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.getText = function getText() {\r\n    return this.value.toString();\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    if (this.value !== value && isNumber(value)) {\r\n      return value;\r\n    }\r\n\r\n    return this.range[0];\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert() {\r\n    return this.value;\r\n  };\r\n\r\n  return Identity;\r\n}(Base);\r\n\r\nBase.Identity = Identity;\r\nmodule.exports = Identity;\r\n\r\n/***/ }),\r\n/* 20 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * @fileOverview The measurement of linear data scale function\r\n * @author dxq613@gmail.com\r\n */\r\nvar fecha = __webpack_require__(11);\r\n\r\nvar each = __webpack_require__(1);\r\n\r\nvar isNil = __webpack_require__(2);\r\n\r\nvar isString = __webpack_require__(6);\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nvar Linear = __webpack_require__(4);\r\n\r\nvar timeAuto = __webpack_require__(21);\r\n\r\nvar TimeUtil = __webpack_require__(12);\r\n/**\r\n * 时间度量的构造函数\r\n * @class Scale.Time\r\n */\r\n\r\n\r\nvar Time =\r\n/*#__PURE__*/\r\nfunction (_Linear) {\r\n  _inheritsLoose(Time, _Linear);\r\n\r\n  function Time() {\r\n    return _Linear.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Time.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Linear.prototype._initDefaultCfg.call(this);\r\n\r\n    this.type = 'time';\r\n    this.mask = 'YYYY-MM-DD';\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.init = function init() {\r\n    var self = this;\r\n    var values = self.values;\r\n\r\n    if (values && values.length) {\r\n      // 重新计算最大最小值\r\n      var timeStamps = [];\r\n      var min = Infinity; // 最小值\r\n\r\n      var secondMin = min; // 次小值\r\n\r\n      var max = 0; // 使用一个循环，计算min,max,secondMin\r\n\r\n      each(values, function (v) {\r\n        var timeStamp = self._toTimeStamp(v);\r\n\r\n        if (isNaN(timeStamp)) {\r\n          throw new TypeError(\"Invalid Time: \" + v);\r\n        }\r\n\r\n        if (min > timeStamp) {\r\n          secondMin = min;\r\n          min = timeStamp;\r\n        } else if (secondMin > timeStamp) {\r\n          secondMin = timeStamp;\r\n        }\r\n\r\n        if (max < timeStamp) {\r\n          max = timeStamp;\r\n        }\r\n\r\n        timeStamps.push(timeStamp);\r\n      }); // 存在多个值时，设置最小间距\r\n\r\n      if (values.length > 1) {\r\n        self.minTickInterval = secondMin - min;\r\n      }\r\n\r\n      if (isNil(self.min) || self._toTimeStamp(self.min) > min) {\r\n        self.min = min;\r\n      }\r\n\r\n      if (isNil(self.max) || self._toTimeStamp(self.max) < max) {\r\n        self.max = max;\r\n      }\r\n    }\r\n\r\n    _Linear.prototype.init.call(this);\r\n  };\r\n\r\n  _proto.calculateTicks = function calculateTicks() {\r\n    var self = this;\r\n    var min = self.min;\r\n    var max = self.max;\r\n    var count = self.tickCount;\r\n    var interval = self.tickInterval;\r\n    var tmp = timeAuto({\r\n      min: min,\r\n      max: max,\r\n      minCount: count,\r\n      maxCount: count,\r\n      interval: interval,\r\n      minInterval: self.minTickInterval\r\n    });\r\n    return tmp.ticks;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.getText = function getText(value) {\r\n    var formatter = this.formatter;\r\n    value = this.translate(value);\r\n    value = formatter ? formatter(value) : fecha.format(value, this.mask);\r\n    return value;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    if (isString(value)) {\r\n      value = this.translate(value);\r\n    }\r\n\r\n    return _Linear.prototype.scale.call(this, value);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.translate = function translate(value) {\r\n    return this._toTimeStamp(value);\r\n  } // 将时间转换为时间戳\r\n  ;\r\n\r\n  _proto._toTimeStamp = function _toTimeStamp(value) {\r\n    return TimeUtil.toTimeStamp(value);\r\n  };\r\n\r\n  return Time;\r\n}(Linear);\r\n\r\nBase.Time = Time;\r\nmodule.exports = Time;\r\n\r\n/***/ }),\r\n/* 21 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n/**\r\n * @fileOverview 计算时间坐标轴\r\n * @author dxq613@gmail.com\r\n */\r\nvar AutoUtil = __webpack_require__(8);\r\n\r\nvar isNil = __webpack_require__(2);\r\n\r\nvar MAX_COUNT = 6;\r\nvar SNAP_ARRAY = [1, 2, 4, 6, 8, 12];\r\nvar MINUTE_MS = 60 * 1000;\r\nvar HOUR_MS = 3600 * 1000;\r\nvar DAY_MS = 24 * 3600 * 1000;\r\n\r\nfunction getYear(date) {\r\n  return new Date(date).getFullYear();\r\n}\r\n\r\nfunction createYear(year) {\r\n  return new Date(year, 0, 1).getTime();\r\n}\r\n\r\nfunction getMonth(date) {\r\n  return new Date(date).getMonth();\r\n}\r\n\r\nfunction diffMonth(min, max) {\r\n  var minYear = getYear(min);\r\n  var maxYear = getYear(max);\r\n  var minMonth = getMonth(min);\r\n  var maxMonth = getMonth(max);\r\n  return (maxYear - minYear) * 12 + (maxMonth - minMonth) % 12;\r\n}\r\n\r\nfunction creatMonth(year, month) {\r\n  return new Date(year, month, 1).getTime();\r\n}\r\n\r\nfunction diffDay(min, max) {\r\n  return Math.ceil((max - min) / DAY_MS);\r\n}\r\n\r\nfunction diffHour(min, max) {\r\n  return Math.ceil((max - min) / HOUR_MS);\r\n}\r\n\r\nfunction diffMinus(min, max) {\r\n  return Math.ceil((max - min) / (60 * 1000));\r\n}\r\n\r\nmodule.exports = function (info) {\r\n  var minInterval = info.minInterval;\r\n  var ticks = [];\r\n  var min = info.min;\r\n  var max = info.max;\r\n  var interval = info.interval;\r\n  var count; // 如果最大值和最小值相等，则设置最大值大于最小值一天\r\n\r\n  if (max === min) {\r\n    max = min + DAY_MS;\r\n  } // 计算间距\r\n\r\n\r\n  if (isNil(interval)) {\r\n    var innerTime = max - min;\r\n    var dms = DAY_MS; // 天代表的秒\r\n\r\n    var yms = 365 * dms; // 年代表的秒\r\n\r\n    interval = parseInt(innerTime / (info.maxCount || MAX_COUNT), 10);\r\n\r\n    if (minInterval && minInterval > interval) {\r\n      interval = minInterval;\r\n    }\r\n\r\n    var yfactor = interval / yms;\r\n    var minYear = getYear(min); // 大于半年\r\n\r\n    if (yfactor > 0.51) {\r\n      var year = Math.ceil(yfactor); // interval = year * yms;\r\n\r\n      var maxYear = getYear(max);\r\n\r\n      for (var i = minYear; i <= maxYear + year; i = i + year) {\r\n        ticks.push(createYear(i));\r\n      }\r\n\r\n      interval = null;\r\n    } else if (yfactor > 0.0834) {\r\n      // 大于一个月\r\n      var month = Math.ceil(yfactor / 0.0834);\r\n      var mmMoth = getMonth(min);\r\n      var dMonths = diffMonth(min, max);\r\n\r\n      for (var _i = 0; _i <= dMonths + month; _i = _i + month) {\r\n        ticks.push(creatMonth(minYear, _i + mmMoth));\r\n      }\r\n\r\n      interval = null;\r\n    } else if (interval > dms * 0.5) {\r\n      // 大于一天\r\n      var date = new Date(min);\r\n\r\n      var _year = date.getFullYear();\r\n\r\n      var _month = date.getMonth(min);\r\n\r\n      var mday = date.getDate();\r\n      var day = Math.ceil(interval / dms);\r\n      var ddays = diffDay(min, max);\r\n      interval = day * dms;\r\n\r\n      for (var _i2 = 0; _i2 < ddays + day; _i2 = _i2 + day) {\r\n        ticks.push(new Date(_year, _month, mday + _i2).getTime());\r\n      }\r\n    } else if (interval > HOUR_MS) {\r\n      // 大于一个小时\r\n      var _date = new Date(min);\r\n\r\n      var _year2 = _date.getFullYear();\r\n\r\n      var _month2 = _date.getMonth(min);\r\n\r\n      var _day = _date.getDate();\r\n\r\n      var hour = _date.getHours();\r\n\r\n      var hours = AutoUtil.snapTo(SNAP_ARRAY, Math.ceil(interval / HOUR_MS));\r\n      var dHours = diffHour(min, max);\r\n      interval = hours * HOUR_MS;\r\n\r\n      for (var _i3 = 0; _i3 <= dHours + hours; _i3 = _i3 + hours) {\r\n        ticks.push(new Date(_year2, _month2, _day, hour + _i3).getTime());\r\n      }\r\n    } else if (interval > MINUTE_MS) {\r\n      // 最小单位是分钟\r\n      var dMinus = diffMinus(min, max);\r\n      var minutes = Math.ceil(interval / MINUTE_MS);\r\n      interval = minutes * MINUTE_MS;\r\n\r\n      for (var _i4 = 0; _i4 <= dMinus + minutes; _i4 = _i4 + minutes) {\r\n        ticks.push(min + _i4 * MINUTE_MS);\r\n      }\r\n    } else {\r\n      if (interval < 1000) {\r\n        interval = 1000;\r\n      }\r\n\r\n      min = Math.floor(min / 1000) * 1000;\r\n      var dSeconds = Math.ceil((max - min) / 1000);\r\n      var seconds = Math.ceil(interval / 1000);\r\n      interval = seconds * 1000;\r\n\r\n      for (var _i5 = 0; _i5 < dSeconds + seconds; _i5 = _i5 + seconds) {\r\n        ticks.push(min + _i5 * 1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!ticks.length) {\r\n    min = Math.floor(min / 1000) * 1000;\r\n    max = Math.ceil(max / 1000) * 1000;\r\n    count = (max - min) / interval;\r\n\r\n    for (var _i6 = 0; _i6 <= count; _i6++) {\r\n      ticks.push(AutoUtil.fixedBase(interval * _i6 + min, interval));\r\n    }\r\n  }\r\n\r\n  return {\r\n    max: max,\r\n    min: min,\r\n    interval: interval,\r\n    ticks: ticks,\r\n    count: ticks.length\r\n  };\r\n};\r\n\r\n/***/ }),\r\n/* 22 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nvar isType = __webpack_require__(3);\r\n\r\nvar isDate = function isDate(value) {\r\n  return isType(value, 'Date');\r\n};\r\n\r\nmodule.exports = isDate;\r\n\r\n/***/ }),\r\n/* 23 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * @fileOverview 时间数据作为分类类型\r\n * @author dxq613@gmail.com\r\n */\r\nvar Base = __webpack_require__(0);\r\n\r\nvar Category = __webpack_require__(9);\r\n\r\nvar fecha = __webpack_require__(11);\r\n\r\nvar catAuto = __webpack_require__(10);\r\n\r\nvar TimeUtil = __webpack_require__(12);\r\n\r\nvar each = __webpack_require__(1);\r\n\r\nvar isNumber = __webpack_require__(5);\r\n\r\nvar isObject = __webpack_require__(7);\r\n\r\nvar isString = __webpack_require__(6);\r\n/**\r\n * 度量的构造函数\r\n * @class Scale.TimeCategory\r\n */\r\n\r\n\r\nvar TimeCategory =\r\n/*#__PURE__*/\r\nfunction (_Category) {\r\n  _inheritsLoose(TimeCategory, _Category);\r\n\r\n  function TimeCategory() {\r\n    return _Category.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = TimeCategory.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Category.prototype._initDefaultCfg.call(this);\r\n\r\n    this.type = 'timeCat';\r\n    /**\r\n     * 是否需要排序，默认进行排序\r\n     * @type {Boolean}\r\n     */\r\n\r\n    this.sortable = true;\r\n    this.tickCount = 5;\r\n    /**\r\n     * 时间格式化\r\n     * @type {String}\r\n     */\r\n\r\n    this.mask = 'YYYY-MM-DD';\r\n  };\r\n\r\n  _proto.init = function init() {\r\n    var self = this;\r\n    var values = this.values; // 针对时间分类类型，会将时间统一转换为时间戳\r\n\r\n    each(values, function (v, i) {\r\n      values[i] = self._toTimeStamp(v);\r\n    });\r\n\r\n    if (this.sortable) {\r\n      // 允许排序\r\n      values.sort(function (v1, v2) {\r\n        return v1 - v2;\r\n      });\r\n    }\r\n\r\n    if (!self.ticks) {\r\n      self.ticks = this.calculateTicks();\r\n    }\r\n  }\r\n  /**\r\n   * 计算 ticks\r\n   * @return {array} 返回 ticks 数组\r\n   */\r\n  ;\r\n\r\n  _proto.calculateTicks = function calculateTicks() {\r\n    var self = this;\r\n    var count = self.tickCount;\r\n    var ticks;\r\n\r\n    if (count) {\r\n      var temp = catAuto({\r\n        maxCount: count,\r\n        data: self.values,\r\n        isRounding: self.isRounding\r\n      });\r\n      ticks = temp.ticks;\r\n    } else {\r\n      ticks = self.values;\r\n    }\r\n\r\n    return ticks;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.translate = function translate(value) {\r\n    value = this._toTimeStamp(value);\r\n    var index = this.values.indexOf(value);\r\n\r\n    if (index === -1) {\r\n      if (isNumber(value) && value < this.values.length) {\r\n        index = value;\r\n      } else {\r\n        index = NaN;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    var rangeMin = this.rangeMin();\r\n    var rangeMax = this.rangeMax();\r\n    var index = this.translate(value);\r\n    var percent;\r\n\r\n    if (this.values.length === 1 || isNaN(index)) {\r\n      // is index is NAN should not be set as 0\r\n      percent = index;\r\n    } else if (index > -1) {\r\n      percent = index / (this.values.length - 1);\r\n    } else {\r\n      percent = 0;\r\n    }\r\n\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.getText = function getText(value) {\r\n    var result = '';\r\n    var index = this.translate(value);\r\n\r\n    if (index > -1) {\r\n      result = this.values[index];\r\n    } else {\r\n      result = value;\r\n    }\r\n\r\n    var formatter = this.formatter;\r\n    result = parseInt(result, 10);\r\n    result = formatter ? formatter(result) : fecha.format(result, this.mask);\r\n    return result;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.getTicks = function getTicks() {\r\n    var self = this;\r\n    var ticks = this.ticks;\r\n    var rst = [];\r\n    each(ticks, function (tick) {\r\n      var obj;\r\n\r\n      if (isObject(tick)) {\r\n        obj = tick;\r\n      } else {\r\n        obj = {\r\n          text: isString(tick) ? tick : self.getText(tick),\r\n          value: self.scale(tick),\r\n          tickValue: tick // 用于坐标轴上文本动画时确定前后帧的对应关系\r\n\r\n        };\r\n      }\r\n\r\n      rst.push(obj);\r\n    });\r\n    return rst;\r\n  } // 将时间转换为时间戳\r\n  ;\r\n\r\n  _proto._toTimeStamp = function _toTimeStamp(value) {\r\n    return TimeUtil.toTimeStamp(value);\r\n  };\r\n\r\n  return TimeCategory;\r\n}(Category);\r\n\r\nBase.TimeCat = TimeCategory;\r\nmodule.exports = TimeCategory;\r\n\r\n/***/ }),\r\n/* 24 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * @fileOverview 使用度量，进行log转换\r\n * @author dxq613@gmail.com\r\n */\r\nvar each = __webpack_require__(1);\r\n\r\nvar Base = __webpack_require__(0);\r\n\r\nvar Linear = __webpack_require__(4); // 计算log\r\n\r\n\r\nfunction log(a, b) {\r\n  if (a === 1) {\r\n    return 1;\r\n  }\r\n\r\n  return Math.log(b) / Math.log(a);\r\n}\r\n/**\r\n * 度量的log计算\r\n * @class Scale.Log\r\n */\r\n\r\n\r\nvar Log =\r\n/*#__PURE__*/\r\nfunction (_Linear) {\r\n  _inheritsLoose(Log, _Linear);\r\n\r\n  function Log() {\r\n    return _Linear.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Log.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Linear.prototype._initDefaultCfg.call(this);\r\n\r\n    this.type = 'log';\r\n    /**\r\n     * @override\r\n     * log 的坐标点的个数控制在10个以下\r\n     * @type {Number}\r\n     */\r\n\r\n    this.tickCount = 10;\r\n    /**\r\n     * 进行log计算的基数\r\n     * @type {Number}\r\n     */\r\n\r\n    this.base = 2; // 最小的tick，仅内部使用\r\n\r\n    this._minTick = null;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.calculateTicks = function calculateTicks() {\r\n    var self = this;\r\n    var base = self.base;\r\n    var minTick;\r\n\r\n    if (self.min < 0) {\r\n      throw new Error('The minimum value must be greater than zero!');\r\n    }\r\n\r\n    var maxTick = log(base, self.max);\r\n\r\n    if (self.min > 0) {\r\n      minTick = Math.floor(log(base, self.min));\r\n    } else {\r\n      var values = self.values;\r\n      var positiveMin = self.max; // 查找大于0的第一个值, 如果都小于0，默认为1\r\n\r\n      each(values, function (value) {\r\n        if (value > 0 && value < positiveMin) {\r\n          positiveMin = value;\r\n        }\r\n      });\r\n\r\n      if (positiveMin === self.max) {\r\n        positiveMin = self.max / base;\r\n      }\r\n\r\n      if (positiveMin > 1) {\r\n        positiveMin = 1;\r\n      }\r\n\r\n      minTick = Math.floor(log(base, positiveMin));\r\n      self._minTick = minTick;\r\n      self.positiveMin = positiveMin;\r\n    }\r\n\r\n    var count = maxTick - minTick;\r\n    var tickCount = self.tickCount;\r\n    var avg = Math.ceil(count / tickCount);\r\n    var ticks = [];\r\n\r\n    for (var i = minTick; i < maxTick + avg; i = i + avg) {\r\n      ticks.push(Math.pow(base, i));\r\n    }\r\n\r\n    if (self.min === 0) {\r\n      ticks.unshift(0);\r\n    }\r\n\r\n    return ticks;\r\n  } // 获取度量计算时，value占的定义域百分比\r\n  ;\r\n\r\n  _proto._getScalePercent = function _getScalePercent(value) {\r\n    var max = this.max;\r\n    var min = this.min;\r\n\r\n    if (max === min) {\r\n      return 0;\r\n    } // 如果值小于等于0，则按照0处理\r\n\r\n\r\n    if (value <= 0) {\r\n      return 0;\r\n    }\r\n\r\n    var base = this.base;\r\n    var positiveMin = this.positiveMin; // 如果min == 0, 则根据比0大的最小值，计算比例关系。这个最小值作为坐标轴上的第二个tick，第一个是0但是不显示\r\n\r\n    if (positiveMin) {\r\n      min = positiveMin * 1 / base;\r\n    }\r\n\r\n    var percent; // 如果数值小于次小值，那么就计算 value / 次小值 占整体的比例\r\n\r\n    if (value < positiveMin) {\r\n      percent = value / positiveMin / (log(base, max) - log(base, min));\r\n    } else {\r\n      percent = (log(base, value) - log(base, min)) / (log(base, max) - log(base, min));\r\n    }\r\n\r\n    return percent;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    var percent = this._getScalePercent(value);\r\n\r\n    var rangeMin = this.rangeMin();\r\n    var rangeMax = this.rangeMax();\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert(value) {\r\n    var base = this.base;\r\n    var max = log(base, this.max);\r\n    var rangeMin = this.rangeMin();\r\n    var range = this.rangeMax() - rangeMin;\r\n    var min;\r\n    var positiveMin = this.positiveMin;\r\n\r\n    if (positiveMin) {\r\n      if (value === 0) {\r\n        return 0;\r\n      }\r\n\r\n      min = log(base, positiveMin / base);\r\n      var appendPercent = 1 / (max - min) * range; // 0 到 positiveMin的占比\r\n\r\n      if (value < appendPercent) {\r\n        // 落到 0 - positiveMin 之间\r\n        return value / appendPercent * positiveMin;\r\n      }\r\n    } else {\r\n      min = log(base, this.min);\r\n    }\r\n\r\n    var percent = (value - rangeMin) / range;\r\n    var tmp = percent * (max - min) + min;\r\n    return Math.pow(base, tmp);\r\n  };\r\n\r\n  return Log;\r\n}(Linear);\r\n\r\nBase.Log = Log;\r\nmodule.exports = Log;\r\n\r\n/***/ }),\r\n/* 25 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\r\n\r\n/**\r\n * @fileOverview 使用pow进行度量计算\r\n * @author dxq613@gmail.com\r\n */\r\nvar Base = __webpack_require__(0);\r\n\r\nvar Linear = __webpack_require__(4); // 求以a为次幂，结果为b的基数，如 x^^a = b;求x\r\n\r\n\r\nfunction calBase(a, b) {\r\n  var e = Math.E;\r\n  var value = Math.pow(e, Math.log(b) / a); // 使用换底公式求底\r\n\r\n  return value;\r\n}\r\n/**\r\n * 度量的Pow计算\r\n * @class Scale.Log\r\n */\r\n\r\n\r\nvar Pow =\r\n/*#__PURE__*/\r\nfunction (_Linear) {\r\n  _inheritsLoose(Pow, _Linear);\r\n\r\n  function Pow() {\r\n    return _Linear.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = Pow.prototype;\r\n\r\n  _proto._initDefaultCfg = function _initDefaultCfg() {\r\n    _Linear.prototype._initDefaultCfg.call(this);\r\n\r\n    this.type = 'pow';\r\n    /**\r\n     * @override\r\n     * pow 的坐标点的个数控制在10个以下\r\n     * @type {Number}\r\n     */\r\n\r\n    this.tickCount = 10;\r\n    /**\r\n     * 进行pow计算的基数\r\n     * @type {Number}\r\n     */\r\n\r\n    this.exponent = 2;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.calculateTicks = function calculateTicks() {\r\n    var self = this;\r\n    var exponent = self.exponent;\r\n    var min;\r\n    var max = Math.ceil(calBase(exponent, self.max));\r\n\r\n    if (self.min >= 0) {\r\n      min = Math.floor(calBase(exponent, self.min));\r\n    } else {\r\n      min = 0;\r\n    }\r\n\r\n    if (min > max) {\r\n      var tmp = max;\r\n      max = min;\r\n      min = tmp;\r\n    }\r\n\r\n    var count = max - min;\r\n    var tickCount = self.tickCount;\r\n    var avg = Math.ceil(count / tickCount);\r\n    var ticks = [];\r\n\r\n    for (var i = min; i < max + avg; i = i + avg) {\r\n      ticks.push(Math.pow(i, exponent));\r\n    }\r\n\r\n    return ticks;\r\n  } // 获取度量计算时，value占的定义域百分比\r\n  ;\r\n\r\n  _proto._getScalePercent = function _getScalePercent(value) {\r\n    var max = this.max;\r\n    var min = this.min;\r\n\r\n    if (max === min) {\r\n      return 0;\r\n    }\r\n\r\n    var exponent = this.exponent;\r\n    var percent = (calBase(exponent, value) - calBase(exponent, min)) / (calBase(exponent, max) - calBase(exponent, min));\r\n    return percent;\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.scale = function scale(value) {\r\n    var percent = this._getScalePercent(value);\r\n\r\n    var rangeMin = this.rangeMin();\r\n    var rangeMax = this.rangeMax();\r\n    return rangeMin + percent * (rangeMax - rangeMin);\r\n  }\r\n  /**\r\n   * @override\r\n   */\r\n  ;\r\n\r\n  _proto.invert = function invert(value) {\r\n    var percent = (value - this.rangeMin()) / (this.rangeMax() - this.rangeMin());\r\n    var exponent = this.exponent;\r\n    var max = calBase(exponent, this.max);\r\n    var min = calBase(exponent, this.min);\r\n    var tmp = percent * (max - min) + min;\r\n    return Math.pow(tmp, exponent);\r\n  };\r\n\r\n  return Pow;\r\n}(Linear);\r\n\r\nBase.Pow = Pow;\r\nmodule.exports = Pow;\r\n\r\n/***/ })\r\n/******/ ]);\r\n});\r\n//# sourceMappingURL=scale.js.map"]}